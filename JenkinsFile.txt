pipeline {
    agent any

    tools {
        msbuild 'MSBuild_2022'
        dockerTool 'Docker'     }

    environment {
        DOCKER_IMAGE = 'enhanced-reaction-controller:latest'
        SONARQUBE_URL = 'http://localhost:9000' 
    }

    stages {
        stage('Build') {
            steps {
                script {
                    bat 'msbuild "Enhanced Reaction Controller/Enhanced Reaction Controller.csproj" /p:Configuration=Release'
                }
            }
        }

       stage('Test') {
            steps {
                script {
                    bat 'dotnet test "Enhanced Reaction Controller/Enhanced Reaction Controller.csproj" --logger:trx'
                }
            }
        }

          stage('Code Quality Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    bat "dotnet sonarscanner begin /k:'EnhancedReactionController' /d:sonar.host.url=${env.SONARQUBE_URL}"
                    bat "msbuild 'Enhanced Reaction Controller/Enhanced Reaction Controller.csproj' /t:Rebuild"
                    bat "dotnet sonarscanner end"
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    docker.build('enhanced-reaction-controller').run('-d -p 8080:80')
                }
            }
        }
        stage('Release') {
            steps {
                script {
                    echo 'Simulating release stage - deploying to production environment...'
                    docker.image(DOCKER_IMAGE).run('-d -p 8080:80 --name enhanced-reaction-controller-prod')
                }
            }
        }

        stage('Monitoring and Alerting') {
            steps {
                script {
                    echo 'Simulating monitoring and alerting setup...'
                }
            }
        }
    }
    
    post {
        always {
            cleanWs()
        }
    }
}